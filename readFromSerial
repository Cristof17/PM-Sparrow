#!/usr/bin/python

import serial
import time
import platform
from devicehub import Sensor, Device, Project
import requests
import json
from threading import Thread


def sendData(URL, headers, values):
	for i in range(len(values)):
		if i == 0 or i == 1:
			continue
		payload = {'value' : str(values[i])}
		r = requests.post (URL[i-2], headers=headers, data=json.dumps(payload))
		print r


URL =[]
for i in range(5):
	URL.append("")

URL[0] = 'https://api.devicehub.net/v2/project/6982/device/52367fa4-a84a-44f7-94dc-f68dc80b8226/sensor/Lumina/data'
URL[1] = 'https://api.devicehub.net/v2/project/6982/device/52367fa4-a84a-44f7-94dc-f68dc80b8226/sensor/IR/data'
URL[2]= 'https://api.devicehub.net/v2/project/6982/device/52367fa4-a84a-44f7-94dc-f68dc80b8226/sensor/UV/data'
URL[3] = 'https://api.devicehub.net/v2/project/6982/device/52367fa4-a84a-44f7-94dc-f68dc80b8226/sensor/Umiditate/data'
URL[4] = 'https://api.devicehub.net/v2/project/6982/device/52367fa4-a84a-44f7-94dc-f68dc80b8226/sensor/Temperatura/data'

PROJECT_ID = '6982'
DEVICE = '52367fa4-a84a-44f7-94dc-f68dc80b8226'
API_KEY = 'b091f489-54ef-478d-aae3-a5428c0056d8'
headers = {'X-ApiKey': API_KEY, 'Content-Type':'application/json'}
payload = {'value' : '34'}
values = []
parameters = {"Zona":0, "ID":1, "Lumina":2 , "IR":3, "UV":4, "HUM":5, "TEMP":6}

for i in range(7):
	values.append(0)

plat = platform.system()
ser = None

if plat == 'Linux':
	print "It's Linux"
	ser = serial.Serial('/dev/ttyUSB0', 9600)
elif plat == 'Windows':
	print "It's Windows"
	ser = serial.Serial('COM7', 9600)
else:
	print "It's not Linux nor Windows"


while 1:
	line = ser.readline()
	time.sleep(0.5)
	print line.strip("\r\n")
	#Memorize values from a batch of data to send to DeviceHub API
	number = line.split(":")[-1].strip("\r\n")
	name = line.split(":")[0]
	if name in parameters.keys() and name is not None and name != "":
		values[parameters.get(name)] = number
		if name == 'Zona':
			print values
			thread = Thread(target = sendData, args = (URL, headers, values))
			thread.start()
			thread.join()
			
			
ser.close();
